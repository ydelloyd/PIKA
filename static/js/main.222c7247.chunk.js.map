{"version":3,"sources":["resources/loading.gif","resources/logo.png","component/AttributePanel/AttributePanel.js","component/GraphPanel/GraphPanel.js","component/MainPage/MainPage.js","component/NavTop/NavTop.js","component/About/About.js","component/Questions/Questions.js","component/People/People.js","component/Team/Team.js","component/ContactPage/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AttributePanel","props","className","type","onClick","reset","handleClustering","GraphPanel","src","require","style","width","height","marginLeft","visibility","spin","alt","textAlign","fontSize","fontWeight","MainPage","useState","setSpin","NavTop","ghost","avatar","size","shape","title","subTitle","extra","key","href","Title","Typography","Paragraph","Text","About","justify","span","flex","Option","Select","Questions","layout","labelCol","wrapperCol","name","onFinish","values","console","log","validateMessages","required","types","email","number","range","Item","label","rules","message","placeholder","value","TextArea","offset","htmlType","Meta","Anchor","Link","Card","People","window","location","person","hoverable","cover","Name","process","Photo","Team","members","ContactPanel","App","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.222c7247.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.5dd02025.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.1519d9e1.png\";","import React, {useState, useEffect} from 'react'\r\nimport { Spin, Button } from 'antd';\r\nimport './AttributePanel.scss';\r\n\r\nexport default function AttributePanel (props){\r\n\r\n    /*useEffect = () => {\r\n        /* load json attribute from bowen's backend stuff here through\r\n         a http request, then go ahead and populate the attribute list\r\n    };*/\r\n\r\n    return (\r\n        <div className='componentDiv'>\r\n            <Button type=\"primary\" onClick={props.reset}>Reset</Button>\r\n            <Button type=\"primary\" onClick={props.handleClustering}>Analyze</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nexport default function GraphPanel(props){\r\n    return (\r\n        <div className='componentDiv'>\r\n            <img src={require(\"./../../resources/loading.gif\")} style={{width: \"500px\", height: \"500px\", marginLeft: \"500px\", visibility: props.spin}} alt=\"loading...\"/>\r\n            <p style={{textAlign: \"center\", fontSize: \"20px\", fontWeight: \"bold\", visibility: props.spin}}>Processing Data, please wait...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport AttributePanel from './../AttributePanel/AttributePanel'\r\nimport GraphPanel from './../GraphPanel/GraphPanel'\r\n\r\nimport { Spin } from 'antd';\r\n\r\nexport default function MainPage (){\r\n    const [spin, setSpin] = useState(\"hidden\");\r\n\r\n    const handleClustering = () => {\r\n        setSpin(\"visible\");\r\n    };\r\n    const reset = () => {\r\n        setSpin(\"hidden\");\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <AttributePanel handleClustering={handleClustering} reset={reset} />\r\n        <GraphPanel spin={spin}/>\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport { PageHeader, Button, Descriptions } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './NavTop.scss'\r\nimport setSpin from './../MainPage/MainPage.js'\r\n\r\nexport default function NavTop ({handleClustering, reset}){\r\n\r\n  return (\r\n      <div className=\"site-page-header-ghost-wrapper\">\r\n          <PageHeader\r\n            ghost={false}\r\n            avatar={{ size: \"60\", shape: \"square\", src: require(\"./../../resources/logo.png\")}}\r\n            title=\"PIKA\"\r\n            subTitle=\"Program for Imagining a Klustering Algorithm\"\r\n            extra={[\r\n              <a key=\"1\" className=\"pika-header-anchor\" href=\"/\">Cluster</a>,\r\n              <a key=\"2\" className=\"pika-header-anchor\" href=\"/document\" onClick={handleClustering}>Documents</a>,\r\n              <a key=\"3\" className=\"pika-header-anchor\" href=\"/contacts\" onClick={reset}>Contacts</a>\r\n            ]}\r\n          >\r\n          </PageHeader>\r\n        </div>\r\n  )\r\n}","import React, {useState} from 'react'\r\nimport { Row, Col, Avatar, Typography } from 'antd';\r\nimport './About.scss'\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nexport default function About(props){\r\n    let about = 'PIKA, Program for Imagining a Klustering Algorithm, is designed to be an application where a user can visualize, on a map, the clusters of various major '+ \r\n    'geographical areas and have the unsupervised learning model group locations. Since urban areas can be successfully classified through different structural dimensions '+\r\n    ', performing the unsupervised version - clustering, should also be a feasible task. We will perform clustering so that a person can identify areas he/she is more '+\r\n    'familiar with. In addition, PIKA will also allow for users to customize what variables and factors they are interested in having considered in the algorithm. All in '+\r\n    'all, we want to define similar cities without ranking and just grouping them together based on a customized attribute pool. We can do this because there exist '+\r\n    'similarities that describe such behavior in thatâ€¦ despite the great geographical distances, the rents and vacancies of some east and west coast cities tend to move together.'\r\n    \r\n    return (\r\n        <div className={`componentDiv`}>\r\n            <Row justify=\"center\">\r\n                <Col span={8}>\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Row justify=\"center\">\r\n                        <Title>Team Rocket #150</Title>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={8}>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={4}>\r\n                </Col>\r\n                <Col>\r\n                    <Col flex=\"64px\"><Avatar shape=\"square\" size={64} src='https://vignette.wikia.nocookie.net/universeconquest/images/6/67/Team_Rocket_Logo.jpg/revision/latest?cb=20190206180338'/></Col>\r\n                    <Col flex=\"auto\">\r\n                        <Paragraph>\r\n                            {about}\r\n                        </Paragraph>\r\n                    </Col>\r\n                </Col>\r\n                <Col span={4}>\r\n                </Col>\r\n            </Row>  \r\n        </div>\r\n            \r\n               \r\n    )\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { Spin } from 'antd';\r\nimport { Row, Col, Avatar, Typography, Form, Input, InputNumber, Button, Select } from 'antd';\r\nimport './Questions.scss'\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function Questions(props){\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n      \r\n    const validateMessages = {\r\n        required: 'This field is required!',\r\n        types: {\r\n          email: 'Not a validate email!',\r\n          number: 'Not a validate number!',\r\n        },\r\n        number: {\r\n          range: 'Must be between ${min} and ${max}',\r\n        },\r\n    };\r\n      \r\n    const onFinish = values => {\r\n        // HTTP Post Call to send email\r\n        console.log(values);\r\n    }\r\n\r\n    return (\r\n        <div className='componentDiv'>\r\n            <Row>\r\n            <Title>Questions?</Title>\r\n            </Row>\r\n            <Row>\r\n            <Paragraph>Contact Us</Paragraph>\r\n            </Row>\r\n            <Row>\r\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={'email'} label=\"Email\" rules={[{ type: 'email' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"IssueType\"\r\n                    label=\"Select\"\r\n                    rules={[{ required: true, message: 'Please select a contact reason' }]}\r\n                >\r\n                    <Select placeholder=\"Please select a contact reason\">\r\n                    <Option value=\"bug\">Report a Bug</Option>\r\n                    <Option value=\"feature\">Request a Feature</Option>\r\n                    <Option value=\"hello\">Saying Hello</Option>\r\n                    <Option value=\"other\">Other</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name={'body'} label=\"Description\">\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                    </Button>\r\n                </Form.Item>\r\n                </Form>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { Row, Col, Avatar, Typography, Form, Input, InputNumber, Button, Select, Card, Anchor  } from 'antd';\r\nconst { Link } = Anchor; \r\nconst { Title, Paragraph, Text } = Typography;\r\nconst { Meta } = Card;\r\nexport default function People(props){\r\n\r\n    return (\r\n        <div onClick={()=>{window.location.href = props.person.Link}}>\r\n            <Card\r\n            hoverable\r\n            style={{ width: 240 }}\r\n            cover={<img alt={'Photo of '+ props.person.Name} src={process.env.PUBLIC_URL + props.person.Photo} />}\r\n            >\r\n            <Meta title={props.person.Name} />\r\n            </Card>\r\n        </div>\r\n            \r\n\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { Row, Col, Avatar, Typography, Form, Input, InputNumber, Button, Select } from 'antd';\r\nimport People from '../People/People';\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nexport default function Team(props){\r\n    let members = [\r\n        {\r\n            Name : 'York Delloyd',\r\n            Photo : '/york.jpg',\r\n            Link : 'https://www.linkedin.com/in/york-delloyd-310342123/'\r\n        },\r\n        {\r\n            Name : 'Bowen Yang',\r\n            Photo : '/bowen.jpg',\r\n            Link : 'https://www.linkedin.com/in/byang9/'\r\n        },\r\n        {\r\n            Name : 'Philip Edwards',\r\n            Photo : '/phil.png',\r\n            Link : 'https://www.linkedin.com/in/philip-edwards-99394bb6/'\r\n        },\r\n        {\r\n            Name : 'Hongji Wang',\r\n            Photo : '/hongji.jpg',\r\n            Link : 'https://www.linkedin.com/in/hongji-wang-4a25b6b6/'\r\n        },\r\n        {\r\n            Name : 'Edward Tan',\r\n            Photo : '/edward.jpg',\r\n            Link : 'https://www.linkedin.com/in/qqtan/'\r\n        }\r\n    ]\r\n    return (\r\n        <div className='componentDiv'>\r\n           <Row>\r\n            <Title>Team Rocket Team</Title>\r\n           </Row>\r\n           <Row>\r\n               <Col>\r\n                    <People person={members[0]}/>\r\n               </Col>\r\n               <Col>\r\n                    <People person={members[1]}/>\r\n               </Col>\r\n           </Row>\r\n           <Row>\r\n               <Col>\r\n                    <People person={members[2]}/>\r\n               </Col>\r\n               <Col>\r\n                    <People person={members[3]}/>\r\n               </Col>\r\n           </Row>\r\n           <Row>\r\n               <Col>\r\n                    <People person={members[4]}/>\r\n               </Col>\r\n           </Row>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport About from '../About/About'\r\nimport Questions from '../Questions/Questions'\r\nimport Team from '../Team/Team'\r\n\r\nexport default function ContactPanel (){\r\n\r\n\r\n    return (\r\n      <div>\r\n        <About/>\r\n        <Questions/>\r\n        <Team/>        \r\n      </div>\r\n\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport './App.css';\r\nimport MainPage from \"./component/MainPage/MainPage\";\r\nimport NavTop from './component/NavTop/NavTop'\r\nimport ContactPage from \"./component/ContactPage/ContactPage\";\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter>\r\n          <div className=\"PIKA\">\r\n              <NavTop/>\r\n              <Switch>\r\n                  <Route exact path=\"/\">\r\n                     <MainPage />\r\n                  </Route>\r\n                  <Route exact path=\"/document\">\r\n                      <div></div>\r\n                  </Route>\r\n                  <Route exact path=\"/contacts\">\r\n                      <ContactPage />\r\n                  </Route>\r\n              </Switch>\r\n          </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}